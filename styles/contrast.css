:root {
	/* purplish - black */
	/* --color: oklch(65% 0.15 270); */

	/* lightish yellow - black */
	/* --color: oklch(85% 0.1 100); */

	/* darkish purple - white */
	/* --color: oklch(35% 0.12 270); */

	/* lightish pink - close to the threshold - black */
	/* --color: oklch(70% 0.08 10); */

	/* lightish green - white */
	/* --color: oklch(60% 0.18 150);  */

	--l-threshold: 0.623;
}

.box {
	padding: 2rem;
	font-size: 0.865rem;
	font-family: sans-serif;
	background: var(--color);
	transition: background 0.3s;
	margin-block: 1rem;
	border: 1px solid black;
}

.contrast-text {
	/* Fallback */
	color: white;
	text-shadow: 0 0 0.05em black, 0 0 0.05em black;

	@supports (color: oklch(from red l c h)) {
		--l: clamp(0, (l / var(--l-threshold) - 1) * -100000, 1);
		color: oklch(from var(--color) var(--l) 0 h);
		text-shadow: none;
	}

	@supports (color: contrast-color(red)) {
		color: contrast-color(var(--color));
	}
}

.outline-contrast {
  outline: 3px solid transparent;
  outline-offset: 2px;
  transition: outline-color 0.2s ease;
}

/* Default fallback for focus */
.outline-contrast:focus {
  outline-color: black;
}

/* RCS support */
@supports (outline-color: oklch(from red l c h)) {
  .outline-contrast:focus {
    --l: clamp(0, (l / var(--l-threshold, 0.623) - 1) * -100000, 1);
    --inverse-l: calc(1 - var(--l));
    outline-color: oklch(from var(--color) var(--inverse-l) 0 h);
  }
}

/* Future support for contrast-color() */
@supports (outline-color: contrast-color(red)) {
  .outline-contrast:focus {
    outline-color: contrast-color(var(--color) max);
  }
}